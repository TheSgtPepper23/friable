var N=null,E="",T="t",U="u",searchIndex={};
var R=["friable","result","try_from","try_into","borrow","borrow_mut","type_id","typeid","Filter","Tokenizer","tokenizer","friable::filter","friable::token"];
searchIndex["friable"]={"doc":E,"i":[[0,"filter",R[0],E,N,N],[3,R[8],R[11],"A filter contains a list of tuples with the characters…",N,N],[11,"new",E,E,0,[[["vec"]],["filter"]]],[11,"get_separator",E,E,0,[[["self"]]]],[0,"token",R[0],E,N,N],[3,R[9],R[12],E,N,N],[11,"new_default",E,"Initializes a Tokenizer with the default filter which only…",1,[[],[R[10]]]],[11,"new",E,"Initializes a tokenizer with a filter specified by the user.",1,[[["filter"]],[R[10]]]],[11,"tokenize",E,"Use the filter to generate a Vec of &str in which every…",1,[[["string"]],[["str"],["vec",["str"]]]]],[11,"into",R[11],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[1]]]],[11,R[3],E,E,0,[[],[R[1]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"into",R[12],E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[1]]]],[11,R[3],E,E,1,[[],[R[1]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]]],"p":[[3,R[8]],[3,R[9]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);